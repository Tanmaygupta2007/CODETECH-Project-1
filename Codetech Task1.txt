import re
import string

def check_length(password):
    return len(password) >= 8

def check_character_variety(password):
    has_upper = any(char.isupper() for char in password)
    has_lower = any(char.islower() for char in password)
    has_digit = any(char.isdigit() for char in password)
    has_special = any(char in string.punctuation for char in password)
    return has_upper and has_lower and has_digit and has_special

def check_common_patterns(password):
    common_patterns = ['123456', 'password', 'qwerty', '111111', 'abc123']
    return not any(pattern in password for pattern in common_patterns)

def check_dictionary_words(password, dictionary):
    return not any(word in password.lower() for word in dictionary)

def calculate_entropy(password):
    pool = 0
    if any(char.islower() for char in password):
        pool += 26
    if any(char.isupper() for char in password):
        pool += 26
    if any(char.isdigit() for char in password):
        pool += 10
    if any(char in string.punctuation for char in password):
        pool += len(string.punctuation)
    entropy = len(password) * (pool.bit_length())
    return entropy

def assess_password_strength(password, dictionary):
    score = 0

    if check_length(password):
        score += 1
    if check_character_variety(password):
        score += 1
    if check_common_patterns(password):
        score += 1
    if check_dictionary_words(password, dictionary):
        score += 1
    
    entropy = calculate_entropy(password)
    if entropy > 50:
        score += 1
    
    if score == 5:
        return "Very Strong"
    elif score == 4:
        return "Strong"
    elif score == 3:
        return "Moderate"
    else:
        return "Weak"

# Example usage
password = "CodeTech@1"
dictionary = ["password", "admin", "letmein", "welcome"]
strength = assess_password_strength(password, dictionary)
print(f"Password Strength: {strength}")
